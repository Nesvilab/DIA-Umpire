plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'idea'
}


group = "umich.nesvilab"
version = '2.1.5'


sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

// This is really the important part
sourceSets {
    main {
        java {
            srcDirs = ['src']
            includes = ['ExternalPackages/SortedListLib/',
                        'ExternalPackages/JAligner/',
                        'ExternalPackages/jMEF/',
                        'MSUmpire/']
        }
        resources {
            srcDirs = ['resources', 'tools', 'src']
            excludes = ['*.java']
            //excludes = ['*.java', '*.jar']
        }
       // add tests sources here (this project didn't have them!)
    }
}


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile 'org.apache.commons:commons-lang3:3.8.1'
    compile 'commons-codec:commons-codec:1.11'


    //compile group: 'uk.ac.ebi.jmzml', name: 'jmzml', version: '1.7.4'


    compile 'com.vseravno.solna:solna:0.5.1' // for MSUmpire.SearchResultParser.PepXMLParser
    compile 'de.ruedigermoeller:fst:2.57' // for MSUmpire.SpectrumParser.mzXMLParser

    //compile 'org.jfree:jfreechart:1.5.0' // for org.jfree.data.xy.XYSeriesCollection
    compile 'org.jfree:jfreechart:1.0.19'
    compile 'ca.umontreal.iro.simul:ssj:3.3.0'

    compile fileTree(dir: '../libs', include: '*.jar')

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

task printLocations << {
    configurations.compile.each { println it }
}
